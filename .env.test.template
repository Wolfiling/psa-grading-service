# ===============================================
# PSA GRADING APPLICATION - TESTS TEMPLATE
# ===============================================
# 🧪 Configuration pour les tests automatisés GitHub Actions
# 🚀 Optimisée pour PostgreSQL service dans les workflows
# 💡 Valeurs de test sécurisées et isolées

# ===============================================
# 🌍 ENVIRONNEMENT DE TEST
# ===============================================

# Environment test
NODE_ENV=test

# Port test (éviter conflits)
PORT=5001

# Configuration proxy désactivée en test
TRUST_PROXY=false

# ===============================================
# 🗃️ BASE DE DONNÉES TEST
# ===============================================

# PostgreSQL service GitHub Actions
# Configuration automatique dans le workflow
DATABASE_URL=postgresql://test_user:test_password@localhost:5432/psa_grading_test

# Configuration SSL désactivée pour tests
DB_SSL=false
DB_SSL_REJECT_UNAUTHORIZED=false

# Pool réduit pour tests
DB_POOL_MIN=2
DB_POOL_MAX=5
DB_POOL_IDLE_TIMEOUT=10000

# ===============================================
# 🔐 SECRETS DE TEST (NON SENSIBLES)
# ===============================================

# Mots de passe test (non sécurisés pour CI)
ADMIN_PASSWORD=test123!
SESSION_SECRET=test_session_secret_1234567890abcdef
PSA_SECRET=test_psa_secret_1234567890abcdef
JWT_SECRET=test_jwt_secret_1234567890abcdef
PSA_CLIENT_SECRET=test_client_secret_1234567890abcdef

# ===============================================
# 🌐 CONFIGURATION RÉSEAU TEST
# ===============================================

# URLs test
ALLOWED_ORIGINS=http://localhost:5001,http://127.0.0.1:5001
PUBLIC_URL=http://localhost:5001

# ===============================================
# 📧 SERVICES EXTERNES (MOCK EN TEST)
# ===============================================

# Service email désactivé en test
BREVO_API_KEY=test_brevo_key_not_real

# PSA credentials test (non fonctionnels)
PSA_EMAIL=test@psa-test.com
PSA_PASSWORD=test_password_not_real

# Taskmaster test (mock)
TASKMASTER_API_URL=http://localhost:3001/api/mock
TASKMASTER_API_KEY=test_taskmaster_key

# ===============================================
# 🛍️ SHOPIFY TEST (MOCK)
# ===============================================

# Configuration Shopify test (non fonctionnelle)
SHOPIFY_SHOP_DOMAIN=test-shop.myshopify.com
SHOPIFY_ADMIN_ACCESS_TOKEN=shpat_test_not_real
SHOPIFY_STOREFRONT_ACCESS_TOKEN=test_storefront_not_real

# ===============================================
# 📊 CONFIGURATION TEST
# ===============================================

# Logging test (verbose pour debugging)
LOG_LEVEL=debug
LOG_DIR=./logs/test

# Performance test (limites réduites)
MAX_UPLOAD_SIZE=5
RATE_LIMIT_MAX=1000
REQUEST_TIMEOUT=10000

# Sécurité relâchée pour tests
SECURITY_HEADERS=false
ENABLE_COMPRESSION=false
ENABLE_METRICS=false

# ===============================================
# 🔍 CONFIGURATION SPÉCIALE CI/CD
# ===============================================

# Variables pour GitHub Actions
CI=true
GITHUB_ACTIONS=true

# Timeouts réduits pour CI
CONNECTION_TIMEOUT=5000
QUERY_TIMEOUT=5000

# Désactiver fonctionnalités non testables
DISABLE_EXTERNAL_SERVICES=true
MOCK_PSA_SCRAPER=true
MOCK_EMAIL_SENDING=true

# ===============================================
# 📝 UTILISATION DANS GITHUB ACTIONS
# ===============================================

# Ce fichier est copié automatiquement vers .env.test
# dans le workflow GitHub Actions avant l'exécution des tests

# Exemple dans deploy.yml:
# - name: 'Setup Test Environment'
#   run: |
#     cp .env.test.template .env.test
#     echo "DATABASE_URL=postgresql://test_user:test_password@localhost:5432/psa_grading_test" >> .env.test

# ===============================================
# 🧪 COMMANDES DE TEST SUPPORTÉES
# ===============================================

# npm run test              # Tests unitaires de base
# npm run test:coverage     # Tests avec couverture
# npm run test:integration  # Tests d'intégration
# npm run test:e2e          # Tests bout en bout (si implémentés)
# npm run security:validate # Validation sécurité

# Variables pour coverage
COVERAGE_THRESHOLD=80
COVERAGE_REPORTERS=text,lcov,json

# ===============================================
# 🚨 NOTES IMPORTANTES
# ===============================================

# ✅ Ces valeurs sont SEULEMENT pour les tests
# ✅ Aucune donnée sensible ou réelle  
# ✅ Base de données effacée après chaque test
# ✅ Services externes mockés automatiquement
# ❌ NE PAS utiliser ces valeurs en production
# ❌ NE PAS modifier sans impact sur CI/CD