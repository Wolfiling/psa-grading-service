name: âœ¨ Feature Request
description: Suggest a new feature or improvement for PSA Grading App
title: "[FEATURE] "
labels: ["enhancement", "needs-triage"]
assignees:
  - product-owner

body:
  - type: markdown
    attributes:
      value: |
        Thank you for suggesting a new feature! We appreciate your ideas to improve PSA Grading App.
        
        Please provide as much detail as possible to help us understand and evaluate your request.

  - type: checkboxes
    id: checklist
    attributes:
      label: Pre-Request Checklist
      description: Please verify these steps before submitting
      options:
        - label: I have searched existing issues and feature requests to avoid duplicates
          required: true
        - label: This feature would benefit multiple users, not just my specific use case
          required: true
        - label: I have considered if this could be achieved with existing functionality
          required: true

  - type: dropdown
    id: feature-category
    attributes:
      label: Feature Category
      description: What area does this feature request relate to?
      options:
        - UI/UX Improvement
        - PSA Integration Enhancement
        - File Upload/Management
        - Email/Notification System
        - Admin Dashboard
        - Mobile Experience
        - Performance Optimization  
        - Security Enhancement
        - Shopify Integration
        - API/Integration
        - Reporting/Analytics
        - Other
    validations:
      required: true

  - type: dropdown
    id: priority
    attributes:
      label: Priority Level
      description: How important is this feature to you?
      options:
        - Low - Nice to have
        - Medium - Would improve workflow
        - High - Important for business goals
        - Critical - Blocking current operations
    validations:
      required: true

  - type: textarea
    id: problem-statement
    attributes:
      label: Problem Statement
      description: What problem does this feature solve? What's frustrating about the current situation?
      placeholder: |
        Currently, users have to manually enter card details which is time-consuming and error-prone.
        There's no way to bulk upload multiple cards at once, which slows down the grading process.
    validations:
      required: true

  - type: textarea
    id: proposed-solution
    attributes:
      label: Proposed Solution
      description: Describe your ideal solution. How should this feature work?
      placeholder: |
        Add a "Bulk Upload" feature that allows users to:
        1. Upload a CSV file with card details
        2. Preview the cards before submitting  
        3. Batch process multiple grading requests
        4. Track progress with a status dashboard
    validations:
      required: true

  - type: textarea
    id: user-story
    attributes:
      label: User Stories
      description: Write user stories that describe how this feature would be used
      placeholder: |
        As a card collector, I want to upload multiple cards at once so that I can save time on grading submissions.
        
        As an admin, I want to see bulk upload status so that I can monitor processing progress.
        
        As a business owner, I want faster processing so that I can serve more customers.
    validations:
      required: true

  - type: dropdown
    id: user-type
    attributes:
      label: Primary User Type
      description: Who would primarily benefit from this feature?
      options:
        - End Users (card collectors)
        - Admin Users (staff)
        - Business Users (owners/managers)
        - Developers (API users)
        - All Users
    validations:
      required: true

  - type: textarea
    id: acceptance-criteria
    attributes:
      label: Acceptance Criteria
      description: What specific criteria must be met for this feature to be considered complete?
      placeholder: |
        - [ ] Users can upload CSV files with card data
        - [ ] System validates CSV format and shows preview
        - [ ] Bulk processing creates individual grading requests  
        - [ ] Users receive email confirmation for bulk submissions
        - [ ] Admin dashboard shows bulk upload statistics
        - [ ] Feature works on both desktop and mobile
        - [ ] Error handling for invalid data

  - type: textarea
    id: alternatives-considered
    attributes:
      label: Alternative Solutions
      description: What other solutions have you considered? Why wouldn't they work as well?
      placeholder: |
        - Manual entry: Too slow for large collections
        - Third-party integration: Would add complexity and cost
        - Mobile app scanning: Limited to one card at a time

  - type: textarea
    id: business-impact
    attributes:
      label: Business Impact
      description: How would this feature benefit the business and users?
      placeholder: |
        - Increase user satisfaction by reducing submission time
        - Enable processing of larger collections  
        - Reduce manual data entry errors
        - Competitive advantage over other grading services
        - Potential to increase revenue per user

  - type: dropdown
    id: implementation-complexity
    attributes:
      label: Estimated Complexity
      description: How complex do you think this feature would be to implement?
      options:
        - Simple - Minor UI/logic change
        - Medium - Moderate development effort
        - Complex - Significant new functionality
        - Major - Large feature requiring extensive work
        - Unknown - Not sure about technical complexity

  - type: textarea
    id: technical-considerations
    attributes:
      label: Technical Considerations
      description: Any technical aspects to consider? (security, performance, integrations, etc.)
      placeholder: |
        - File upload security (validate CSV format, file size limits)
        - Database performance for bulk inserts
        - Queue system for processing large batches
        - Integration with existing PSA validation logic
        - Error handling and retry mechanisms

  - type: textarea
    id: mockups-wireframes
    attributes:
      label: Mockups/Wireframes
      description: If you have any visual ideas, sketches, or examples, please share them here. You can drag and drop images.

  - type: textarea
    id: examples-references
    attributes:
      label: Examples/References
      description: Any examples of similar features in other applications that work well?
      placeholder: |
        - Google Sheets bulk import functionality
        - Shopify product CSV import
        - Stripe bulk customer upload
        - Similar feature in [competitor name]

  - type: input
    id: timeline
    attributes:
      label: Desired Timeline
      description: When would you like to see this feature implemented? (be realistic)
      placeholder: "Next quarter, within 6 months, no rush, etc."

  - type: checkboxes
    id: integration-points
    attributes:
      label: Integration Points
      description: Check any existing systems this feature should integrate with
      options:
        - label: PSA grading system
        - label: Email notifications  
        - label: Admin dashboard
        - label: Shopify integration
        - label: Payment processing
        - label: File storage system
        - label: Mobile responsive design
        - label: API endpoints

  - type: textarea
    id: edge-cases
    attributes:
      label: Edge Cases & Error Handling
      description: What edge cases or error scenarios should be considered?
      placeholder: |
        - What if CSV file is corrupted or has wrong format?
        - How to handle duplicate card entries?
        - What if batch processing fails partially?
        - How to handle very large files (memory/timeout issues)?

  - type: dropdown
    id: willing-to-help
    attributes:
      label: Contribution Willingness
      description: Would you be willing to help with this feature?
      options:
        - I can provide feedback during development
        - I can help with testing the feature
        - I can help with documentation
        - I can contribute code (if possible)
        - I prefer to just provide the idea

  - type: input
    id: contact-info
    attributes:
      label: Contact Information (Optional)
      description: How can we reach you for follow-up questions?
      placeholder: "your-email@example.com or @your-github-handle"

  - type: markdown
    attributes:
      value: |
        ---
        
        ### What Happens Next?
        
        1. **Review** - Our product team will evaluate your request
        2. **Discussion** - We may reach out for clarification or additional details  
        3. **Planning** - Approved features will be added to our roadmap
        4. **Development** - Features will be prioritized and scheduled
        5. **Updates** - You'll be notified of progress and can test early versions
        
        Thank you for helping shape the future of PSA Grading App! ðŸŒŸ