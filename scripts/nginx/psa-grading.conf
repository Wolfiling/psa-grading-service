# ===============================================
# CONFIGURATION NGINX - PSA GRADING APP
# ===============================================
# üöÄ Configuration compl√®te pour d√©ploiement OVH
# üìä Optimis√©e pour performance, s√©curit√© et SSL

# Configuration rate limiting globale
limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;
limit_req_zone $binary_remote_addr zone=api:10m rate=30r/m;
limit_req_zone $binary_remote_addr zone=general:10m rate=20r/s;

# Cache pour fichiers statiques
proxy_cache_path /var/cache/nginx/psa levels=1:2 keys_zone=psa_cache:10m max_size=100m inactive=60m use_temp_path=off;

# Server block HTTP - Redirection vers HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name _;  # Wildcard pour tous les domaines
    
    # Security headers m√™me en HTTP
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    
    # Let's Encrypt verification
    location /.well-known/acme-challenge/ {
        root /var/www/letsencrypt;
        allow all;
    }
    
    # Health check sans redirection (pour monitoring)
    location = /healthz {
        proxy_pass http://127.0.0.1:5000;
        access_log off;
    }
    
    # Redirection HTTPS pour tout le reste
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# Server block HTTPS principal
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name _;  # Sera remplac√© par le domaine r√©el
    
    # ===========================
    # CONFIGURATION SSL/TLS
    # ===========================
    # Certificats Let's Encrypt (chemins par d√©faut)
    ssl_certificate /etc/letsencrypt/live/DOMAIN_PLACEHOLDER/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/DOMAIN_PLACEHOLDER/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/DOMAIN_PLACEHOLDER/chain.pem;
    
    # Param√®tres SSL optimis√©s
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;
    
    # OCSP Stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;
    
    # ===========================
    # HEADERS DE S√âCURIT√â
    # ===========================
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: blob:; font-src 'self'; connect-src 'self' wss:; media-src 'self' blob:; object-src 'none'; frame-ancestors 'none';" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=(), payment=()" always;
    
    # Protection contre les attaques par d√©ni de service
    add_header X-Robots-Tag "noindex, nofollow" always;
    
    # ===========================
    # CONFIGURATION G√âN√âRALE
    # ===========================
    client_max_body_size 200M;  # Support uploads vid√©o jusqu'√† 200MB
    client_body_timeout 60s;
    client_header_timeout 60s;
    keepalive_timeout 65s;
    send_timeout 60s;
    
    # Logs d'acc√®s sp√©cifiques
    access_log /var/log/nginx/psa-access.log combined;
    error_log /var/log/nginx/psa-error.log warn;
    
    # ===========================
    # OPTIMISATIONS PERFORMANCES
    # ===========================
    # Compression gzip
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types
        application/javascript
        application/json
        application/xml
        application/xml+rss
        application/x-javascript
        application/x-font-ttf
        application/vnd.ms-fontobject
        font/opentype
        image/svg+xml
        image/x-icon
        text/css
        text/javascript
        text/plain
        text/xml;
    
    # ===========================
    # ROUTES SP√âCIFIQUES
    # ===========================
    
    # Routes admin avec rate limiting strict
    location ~* ^/(admin|api/admin) {
        limit_req zone=login burst=3 nodelay;
        
        # Authentication basic pour admin en prod
        auth_basic "PSA Admin Area";
        auth_basic_user_file /etc/nginx/.htpasswd;
        
        proxy_pass http://127.0.0.1:5000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;
        
        proxy_connect_timeout 30s;
        proxy_send_timeout 120s;    # Timeout √©tendu pour admin
        proxy_read_timeout 120s;
        
        # Pas de cache pour admin
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
    }
    
    # API routes avec rate limiting
    location ~* ^/api/ {
        limit_req zone=api burst=10 nodelay;
        
        proxy_pass http://127.0.0.1:5000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;
        
        proxy_connect_timeout 30s;
        proxy_send_timeout 90s;     # Timeout √©tendu pour API
        proxy_read_timeout 90s;
        
        # Headers pour CORS si n√©cessaire
        add_header Access-Control-Allow-Origin "$http_origin" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
        add_header Access-Control-Expose-Headers "Content-Length,Content-Range" always;
        
        if ($request_method = 'OPTIONS') {
            return 204;
        }
    }
    
    # Upload de vid√©os avec timeout √©tendu
    location ~* ^/api/video/upload {
        limit_req zone=api burst=3 nodelay;
        client_max_body_size 200M;
        
        proxy_pass http://127.0.0.1:5000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_connect_timeout 60s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        proxy_request_buffering off;
    }
    
    # Health check sans rate limiting
    location = /healthz {
        proxy_pass http://127.0.0.1:5000;
        access_log off;
        add_header Cache-Control "no-cache" always;
    }
    
    # Status page avec acc√®s limit√©
    location = /status {
        allow 127.0.0.1;
        allow ::1;
        deny all;
        
        proxy_pass http://127.0.0.1:5000;
        access_log off;
    }
    
    # Fichiers statiques avec cache long
    location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        proxy_pass http://127.0.0.1:5000;
        
        # Cache c√¥t√© navigateur
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        
        # Cache proxy Nginx
        proxy_cache psa_cache;
        proxy_cache_valid 200 1d;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        proxy_cache_background_update on;
        add_header X-Cache-Status $upstream_cache_status;
    }
    
    # Robots.txt et autres fichiers meta
    location ~* ^/(robots\.txt|sitemap\.xml|favicon\.ico)$ {
        proxy_pass http://127.0.0.1:5000;
        expires 1d;
        add_header Cache-Control "public";
    }
    
    # Routes principales avec rate limiting g√©n√©ral
    location / {
        limit_req zone=general burst=20 nodelay;
        
        proxy_pass http://127.0.0.1:5000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;
        proxy_cache_bypass $http_upgrade;
        
        proxy_connect_timeout 30s;
        proxy_send_timeout 60s;     # Timeout √©tendu pour pages
        proxy_read_timeout 60s;
        
        # Cache pour pages statiques
        location ~* ^/(signup|help|terms|privacy)$ {
            proxy_cache psa_cache;
            proxy_cache_valid 200 1h;
            proxy_cache_use_stale error timeout updating;
            add_header X-Cache-Status $upstream_cache_status;
        }
    }
    
    # Protection contre les scanners
    location ~* ^/(\.git|\.env|\.htaccess|wp-admin|phpmyadmin|admin\.php) {
        deny all;
        access_log off;
        return 444;
    }
    
    # Bloquer les User-Agents malicieux
    if ($http_user_agent ~* (nmap|nikto|wikto|sf|sqlmap|bsqlbf|w3af|acunetix|havij|appscan)) {
        return 444;
    }
}

# ===========================
# MONITORING ET MAINTENANCE
# ===========================

# Log format personnalis√© pour monitoring
log_format psa_monitoring '$remote_addr - $remote_user [$time_local] '
                          '"$request" $status $bytes_sent '
                          '"$http_referer" "$http_user_agent" '
                          'rt=$request_time uct="$upstream_connect_time" '
                          'uht="$upstream_header_time" urt="$upstream_response_time"';

# Server block pour monitoring interne
server {
    listen 127.0.0.1:8080;
    server_name localhost;
    
    access_log off;
    
    # Nginx status
    location /nginx_status {
        stub_status on;
        allow 127.0.0.1;
        deny all;
    }
    
    # Cache status
    location /cache_status {
        proxy_cache_purge psa_cache $request_uri;
        allow 127.0.0.1;
        deny all;
    }
}